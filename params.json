{"name":"Setphotoset","tagline":"Javascript Function for Dynamic, Proportional Resizing of Images in a Photoset","body":"**`jzmn.setPhotoset`** is a javascript function for beautifully resizing images in a photoset, without cropping or aspect-ratio distortion, such that all images in a row are of the same height.`jzmn.setPhotoset` makes use of percentage widths, so that the photoset can work for all sizes, and can be resized without problem.\r\n\r\nLike most of my coding experiments, it is encapsulated in the `jzmn` namespace. This largely means nothing.\r\n\r\nBasic Usage\r\n-----------\r\nThe general format of `jzmn.setPhotoset` is shown below:\r\n```javascript\r\njzmn.setPhotoset(element,userOptions,grouping)\r\n```\r\n*`element`* refers to the element node, nodelist of elements, or CSS-selector string of the photosets you want to set. \r\n\r\n*`userOptions`* is an optional object containing customizable options for the function (listed below).\r\n\r\n*`grouping`* is an optional CSS-selector-friendly string meant to group photosets together in a class for similar styling. If set, gives the photoset elements a class 'photoset-*grouping*'. Will be randomly generated if not set.\r\n\r\nUser Options\r\n------------\r\n| userOptions        | type           | default  | description |\r\n| ------------- |:-------------:| -----:| ---- |\r\n| layout     \t| string OR [number]| 0 \t\t| defines layout of photoset (number of items per row. e.g \"121\" or [1,2,1]). If falsey, layout information is aquired from data-layout attribute if existing, or else nothing happens. |\r\n| immediate    \t| boolean      \t\t| false \t| boolean determining whether to immediately invoke function. If false, waits for all IMG children to load before executing layout application (no other `childItem` is supported). If true immediately applies layout, making use of height and width data provided in the attributes defined in `childHeight` and `childWidth` of `childItems`. |\r\n| childItem\t\t| string\t\t\t| \"img\"\t\t| CSS-selector string that determines which children inside element is used to create grid. If set to something other than \"img\", `immediate` must be set to true and `childHeight` and `childWidth` be set appropriately.|\r\n| childHeight \t| string      \t\t| \"height\" \t| name of attribute on each childItem that lists item's height. |\r\n| childWidth \t| string      \t\t| \"width\" \t| name of attribute on each childItem that lists item's width. |\r\n| callback\t\t| function\t\t\t| null  \t| function to execute after a photoset has been worked on. takes photoset DOM element as argument. |\r\n| gutter \t\t| number OR string \t| 0 \t\t| value that sets spacing between items. If string, must be usable inside calc(). If a number, is set in px. |\r\n| createSheet   | boolean \t\t\t| true \t\t| boolean determining whether a stylesheet is to be created containing the styling required for layouting (if it doesn't yet exist). Set to false if you wish to supply your own stylesheet. See setphotoset-example.css for sample.|\r\n\r\nExamples\r\n--------\r\n\r\nFor examples, visit this [demo page](http://jzumun.tumblr.com/set-photoset)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}