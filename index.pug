doctype html
html(lang="en")
	head
		meta(charset="UTF-8")
		meta(name="viewport",content="width=device-width, initial-scale=1")
		title setPhotoset: Javascript Function for Dynamic, Proportional Resizing of Images in a Photoset
		link(rel="stylesheet",type="text/css",href="stylesheets/fontin.css")
		link(rel="stylesheet",type="text/css",href="stylesheets/jzmn.css")
	body
		section.page-header
			h1.project-name setPhotoset
			p.project-tagline setPhotoset: Javascript Function for Dynamic, Proportional Resizing of Images in a Photoset
			nav.page-links
				a.button(href="https://github.com/JZumun/setPhotoset") View on Github
				a.button(href="https://github.com/JZumun/setPhotoset/zipball/master") Download .zip
				a.button(href="https://github.com/JZumun/setPhotoset/tarball/master") Download .tar.gz
		section.main-content
			:markdown-it
				**`jzmn.setPhotoset`** is a javascript function for beautifully resizing images in a photoset, without cropping or aspect-ratio distortion, such that all images in a row are of the same height.`jzmn.setPhotoset` makes use of percentage widths, so that the photoset can work for all sizes, and can be resized without problem.

			h2#basic-usage Basic Usage
			:markdown-it
				The general format of `setPhotoset` is shown below:
				```javascript
				setPhotoset(element,userOptions,grouping);
				```
				*`element`* refers to the element node, nodelist of elements, or CSS-selector string of the photosets you want to set.

				*`userOptions`* is an optional object containing customizable options for the function (listed below).

				*`grouping`* is an optional CSS-selector-friendly string meant to group photosets together in a class for similar styling. If not set, *`grouping`* will be randomly generated.

			h2#user-options User Options
			-
				userOptions = [
					{
						name: "layout", 
						type: "String || [Number]", 
						default: "null", 
						description: "defines layout of photoset (number of items per row. e.g. '121' or [1,2,1]). If falsy, layout information is aquired from the attribute name defined by codelayoutAttribute/code if existing, or else nothing happens."
					},
					{
						name: "layoutAttribute", 
						type: "String", 
						default: "data-layout", 
						description: "attribute name from which layout information will be derived, if codelayout/code property is falsy."
					},
					{
						name: "immediate", 
						type: "Boolean", 
						default: "false",
						description: "If false, waits for all children defined by codechildItem/code to load before executing layout application. If true immediately applies layout, making use of height and width data provided in the attributes defined in codechildHeight/code and codechildWidth/code of codechildItems/code."
					},
					{
						name: "childItem", 
						type: "String", 
						default: "img",
						description: "CSS-selector string that determines which children inside element is used to create grid."
					},
					{
						name: "childHeight", 
						type: "String", 
						default: "height",
						description: "name of attribute on each childItem that lists item's height."
					},
					{
						name: "childWidth", 
						type: "String", 
						default: "width",
						description: "name of attribute on each childItem that lists item's width."
					},
					{
						name: "gutter", 
						type: "Number || String", 
						default: "0",
						description: "value that sets spacing between items. If string, must be usable inside calc(). If a number, is set in px."
					},
					{
						name: "createSheet", 
						type: "Boolean", 
						default: "true",
						description: "boolean determining whether a stylesheet is to be created containing the styling required for layouting (if it doesn't yet exist). Set to false if you wish to supply your own stylesheet. See setphotoset-example.css for sample."
					},
				]
			table
				thead
					tr
						th.data-options Options
						th.data-type Type
						th.data-default Default
						th.data-description Description
				tbody
					each option in userOptions
						tr
							td.data-options!= option.name
							td.data-type!= option.type 
							td.data-default!= option.default
							td.data-description!= option.description

			h2#examples Examples
			h3 Example 1: Basic Usage
			h4 HTML
			pre.lang-html
				code.
					&lt;div class="photoset" id="#photoset1"&gt;
						&lt;img src="1.png" /&gt;
						&lt;img src="2.png" /&gt;
						&lt;img src="3.png" /&gt;
						&lt;img src="4.png" /&gt;
						&lt;img src="5.png" /&gt;
					&lt;/div&gt;
			h4 Javascript
			pre.lang-js
				code.
					var photoset = document.querySelector("#photoset1");
					setPhotoset(photoset,{layout:"23"});
			h4 Result
			#example1.photoset.set-example
				img(src="https://41.media.tumblr.com/ca493b931aed8a348ecf4d768fe158ba/tumblr_ntl3gkXUhJ1qhqme0o9_1280.jpg")
				img(src="https://40.media.tumblr.com/88c5926f7966818fccb3f8742bdf84c4/tumblr_ntl3gkXUhJ1qhqme0o1_1280.jpg")
				img(src="https://40.media.tumblr.com/a302157bbca1674eefb2d18bc1b15c09/tumblr_ntl3gkXUhJ1qhqme0o2_1280.jpg")
				img(src="https://40.media.tumblr.com/a10e1f69de529e8f04821a3208028184/tumblr_ntl3gkXUhJ1qhqme0o7_1280.jpg")
				img(src="https://41.media.tumblr.com/4d5c8effb0288215c9c15d1f3c794738/tumblr_ntl3gkXUhJ1qhqme0o6_1280.jpg")

			h3 Example 2: Multiple Photosets
			p By defining a codelayoutAttribute/code property and then setting it as an attribute on each individual photoset (or setting a 'data-layout' attribute which is the default value for the option), multiple sets can be targeted and styled by the same line of javascript while applying different layouts.
			h4 HTML
			pre.lang-html
				code.
					&lt;div class="photoset" id="#photoset2-1" data-layout="23"&gt;
						&lt;img src="1.png" /&gt;
						&lt;img src="2.png" /&gt;
						&lt;img src="3.png" /&gt;
						&lt;img src="4.png" /&gt;
						&lt;img src="5.png" /&gt;
					&lt;/div&gt;
					&lt;div class="photoset" id="#photoset2-2" data-layout="121" &gt;
						&lt;img src="6.png" /&gt;
						&lt;img src="7.png" /&gt;
						&lt;img src="8.png" /&gt;
						&lt;img src="9.png" /&gt;
					&lt;/div&gt;
			h4 Javascript
			pre.lang-js.
				var photosets = document.querySelectorAll(".photoset");
				setPhotoset(photosets);
			h4 Result
			div#example2.set-example
				.photoset(data-layout="23")
					img(src="https://41.media.tumblr.com/ca493b931aed8a348ecf4d768fe158ba/tumblr_ntl3gkXUhJ1qhqme0o9_1280.jpg")
					img(src="https://40.media.tumblr.com/88c5926f7966818fccb3f8742bdf84c4/tumblr_ntl3gkXUhJ1qhqme0o1_1280.jpg")
					img(src="https://40.media.tumblr.com/a302157bbca1674eefb2d18bc1b15c09/tumblr_ntl3gkXUhJ1qhqme0o2_1280.jpg")
					img(src="https://40.media.tumblr.com/a10e1f69de529e8f04821a3208028184/tumblr_ntl3gkXUhJ1qhqme0o7_1280.jpg")
					img(src="https://41.media.tumblr.com/4d5c8effb0288215c9c15d1f3c794738/tumblr_ntl3gkXUhJ1qhqme0o6_1280.jpg")
				.photoset(data-layout="22")
					img(src="https://40.media.tumblr.com/8dfa2986674e33563e1caac48efceb89/tumblr_ntl3gkXUhJ1qhqme0o4_1280.jpg")
					img(src="https://41.media.tumblr.com/115e9ab4739513722e919344c775813d/tumblr_ntl3gkXUhJ1qhqme0o5_1280.jpg")
					img(src="https://41.media.tumblr.com/8b1419800b3fa4d9cfde6fffe47ca9ae/tumblr_ntl3gkXUhJ1qhqme0o3_1280.jpg")
					img(src="https://40.media.tumblr.com/a10e1f69de529e8f04821a3208028184/tumblr_ntl3gkXUhJ1qhqme0o7_1280.jpg")
			h3 Example 3: Setting Immediately
			p For the following example, the codea/code tags will be targeted, with attributes codedata-height/code and codedata-width/code to set its dimensions. Note that codechildItem/code may emnot necessarily/em be a direct descendant of the photoset node.
			h4 HTML
			pre.lang-html
				code.
					&lt;div class="photoset" id="#photoset3" data-layout="12" &gt;
						&lt;a href="1.png" data-height="2448" data-width"3264"&gt;
							&lt;img src="1.png" /&gt;
						&lt;/a&gt;
						&lt;a href="2.png" data-height="700" data-width"1050"&gt;
							&lt;img src="2.png" /&gt;
						&lt;/a&gt;
						&lt;a href="1.png" data-height="1575" data-width"1050"&gt;
							&lt;img src="1.png" /&gt;
						&lt;/a&gt;
					&lt;/div&gt;
			h4 Javascript
			pre.lang-js
				code.
					var photoset = document.querySelector("#photoset3")
					setPhotoset(photoset,{
						immediate:   true, 
						childItem:   'a'
						childHeight: 'data-height', 
						childWidth:  'data-width'
					});
			h4 Result
			#example3.set-example(data-layout="12")
				a(href="#",data-width="3264",data-height="2448")
					img(src="https://40.media.tumblr.com/a10e1f69de529e8f04821a3208028184/tumblr_ntl3gkXUhJ1qhqme0o7_1280.jpg")
				a(href="#",data-width="1050",data-height="700")
					img(src="https://40.media.tumblr.com/88c5926f7966818fccb3f8742bdf84c4/tumblr_ntl3gkXUhJ1qhqme0o1_1280.jpg")
				a(href="#",data-width="1050",data-height="1575")
					img(src="https://40.media.tumblr.com/a302157bbca1674eefb2d18bc1b15c09/tumblr_ntl3gkXUhJ1qhqme0o2_1280.jpg")
			h3 Example 4: Gutters
			h4 Javascript
			pre.lang-js
					code.
						setPhotoset(<em>photoset</em>,{gutter:"5px"});
			h4 Result
			#example4.set-example
				img(src="https://40.media.tumblr.com/a10e1f69de529e8f04821a3208028184/tumblr_ntl3gkXUhJ1qhqme0o7_1280.jpg")
				img(src="https://40.media.tumblr.com/88c5926f7966818fccb3f8742bdf84c4/tumblr_ntl3gkXUhJ1qhqme0o1_1280.jpg")
				img(src="https://40.media.tumblr.com/a302157bbca1674eefb2d18bc1b15c09/tumblr_ntl3gkXUhJ1qhqme0o2_1280.jpg")
				img(src="https://41.media.tumblr.com/ca493b931aed8a348ecf4d768fe158ba/tumblr_ntl3gkXUhJ1qhqme0o9_1280.jpg")
				img(src="https://41.media.tumblr.com/4d5c8effb0288215c9c15d1f3c794738/tumblr_ntl3gkXUhJ1qhqme0o6_1280.jpg")

		footer.site-footer
			span.site-footer-owner <a href="https://github.com/JZumun/setPhotoset">setPhotoset</a> is maintained by <a href="https://github.com/JZumun">JZumun</a>.


		script(src="https://rawgit.com/JZumun/setPhotoset/master/dist/jzmn.setphotoset.min.js")
		script.
			if (!setPhotoset) console.log("No setPhotoset found.");
			var photosets = {
				"#example1" : {layout:"[2,3]"},
				"#example2 .photoset" : {},
				"#example3" : { immediate: true, childItem: 'a', childHeight: 'data-height', childWidth: 'data-width' },
				"#example4" : {layout:"23",gutter:"5px"}
			};

			Object.keys(photosets).forEach(function(selector){
				setPhotoset(document.querySelectorAll(selector), photosets[selector]);
			});
		script(src="https://static.tumblr.com/wvoc5tm/lrQof5c34/jzmn.dom.min.js")
		script.
			(function(){
			 	jzmn("pre").addClass(["prettyprint","linenums"]).each(function(el,i){
			 	    el.innerHTML = el.innerHTML.replace(/	/g,"     ");
			 	});
			    
			    var head =  document.getElementsByTagName("head")[0];
			    var prettifier = jzmn.createEl(	"script",{type:"text/javascript"});
			    var pretticss =  jzmn.createEl(	"link",{rel:"stylesheet",type:"text/css",href:"http://static.tumblr.com/wvoc5tm/Osbnu7uzw/jzmn_pre.css"})
			    var prettifierExtension = jzmn.createEl("script",{type:"text/javascript"});

			    head.appendChild(prettifier);
			    prettifier.addEventListener("load",function(){
			        prettifierExtension.addEventListener("load",prettyPrint);
			        head.appendChild(prettifierExtension);
			        prettifierExtension.setAttribute("src","https://cdn.rawgit.com/google/code-prettify/master/loader/lang-css.js")
			    });		       
			    prettifier.setAttribute("src","https://cdn.rawgit.com/google/code-prettify/master/loader/prettify.js");

			    head.appendChild(pretticss);
			     
			 })();


